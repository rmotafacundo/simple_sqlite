import 'package:flutter/material.dart';import 'pet_controller.dart';import 'pet_detail_page.dart';import 'pet_model.dart';import 'pet_repository.dart';class PetListPage extends StatefulWidget {  @override  _PetListPageState createState() => _PetListPageState();}class _PetListPageState extends State<PetListPage> {  final controller = PetController(PetRepository());  Future<List<PetModel>> _pets;  bool checkedValue = false;  @override  void initState() {    super.initState();    _pets = _findAll();  }  Future<List<PetModel>> _findAll() async {    return await controller.findAll();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text('Pets'),      ),      body: Container(        child: FutureBuilder<List<PetModel>>(            future: _pets,            builder: (context, snapshot) {              if (snapshot.hasData) {                List<PetModel> pets = snapshot.data;                if (pets.length > 0) {                  return ListView.builder(                    itemCount: pets.length,                    itemBuilder: (context, index) {                      PetModel pet = pets[index];                      return ListTile(                        leading: Checkbox(                            value: pet.status,                            onChanged: (newValue) async {                              int newStatus = newValue ? 1 : 0;                              await controller.changeStatus(pet.id, newStatus);                              setState(() {                                _pets = _findAll();                              });                            }),                        title: Text(pet.name),                        trailing: IconButton(                          icon: Icon(Icons.delete_forever),                          onPressed: () async {                            await controller.delete(pet.id);                            setState(                              () {                                _pets = _findAll();                              },                            );                          },                        ),                      );                    },                  );                } else {                  return Center(child: Text('Click +'));                }              } else {                return Center(child: Text('Loading...'));              }            }),      ),      floatingActionButton: FloatingActionButton(        onPressed: () async {          await Navigator.of(context)              .push(MaterialPageRoute(builder: (context) => PetDetailPage()));          controller.findAll().then((value) {            setState(() {              _pets = _findAll();            });          });        },        child: Icon(Icons.add),      ), // This trailing comma makes    );  }}