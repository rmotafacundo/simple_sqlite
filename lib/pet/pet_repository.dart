import 'package:simple_sqlite/database/connection.dart';import 'pet_model.dart';class PetRepository {  Future<int> save(PetModel petModel) async {    var db = await Connection.getInstance().db;    var id = await db.insert('pets', petModel.toMap());    return id;  }  Future<List<PetModel>> findAll() async {    var db = await Connection.getInstance().db;    final lista = await db.rawQuery('select * from pets');    final pets = lista.map<PetModel>((map) => PetModel.fromMap(map)).toList();    return pets;  }  Future<int> delete(int idPet) async {    var db = await Connection.getInstance().db;    var id = await db.delete('pets', where: 'id = ${idPet.toString()}');    return id;  }  Future<void> changeStatus(int idPet, int newStatus) async {    var db = await Connection.getInstance().db;    await db.rawQuery('update pets set status = ? where id = ?', [newStatus,idPet]);  }}